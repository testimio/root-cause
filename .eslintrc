{
  "extends": ["airbnb-base", "prettier"],
  "env": {
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint/eslint-plugin", "no-only-tests"],
  "rules": {
    "no-only-tests/no-only-tests": "error",
    "no-useless-constructor": "off",
    "no-underscore-dangle": "off",
    "filename-matches-export": "off",
    "no-wildcard": "off",
    "no-plusplus": "off",
    // not working with ts properly
    "import/no-unresolved": "off",
    "import/named": "off",
    "class-methods-use-this": "off",
    "strict": "off",
    "global-require": "off",
    "no-use-before-define": "off",
    "max-classes-per-file": "off",
    "vars-on-top": "off",
    "no-unused-vars": "warn",
    "no-undef": "warn",
    "lines-between-class-members": "off",
    "no-consecutive-blank-lines": "off",
    "import/prefer-default-export": "off",
    "no-param-reassign": "off",
    "arrow-parens": "off",
    "implicit-arrow-linebreak": "off",
    "import/no-dynamic-require": "warn",
    "spaced-comment": "off",
    "prefer-promise-reject-errors": "warn",
    "prefer-object-spread": "off",
    "no-useless-escape": "off",
    "import/extensions": "off",
    "import/order": "off",
    "prefer-destructuring": "off",
    "no-return-await": "off",
    "no-return-assign": ["error", "except-parens"],
    "func-names": "off",
    "no-tabs": "off",
    "no-prototype-builtins": "off",
    "no-fallthrough": "warn",
    "no-multi-assign": "warn",
    "no-new-func": "off",
    "prefer-spread": "off",
    "no-new": "warn",
    "no-else-return": "warn",
    "no-shadow": "off",
    "no-var": "off",
    "padded-blocks": "off",
    "consistent-return": "off",
    "consistent-returns": "off",
    "no-await-in-loop": "off",
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "generator-star-spacing": ["error", "after"],
    "no-continue": "off",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 3
      }
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/test.js",
          "**/*.test.js",
          "**/*.test.ts",
          "webpack/*",
          "quality/*",
          "scripts/*",
          "packages/internal-self-tests-helpers/*"
        ]
      }
    ],
    "import/no-duplicates": "warn"
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "extends": [
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended"
      ],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-empty-function": "warn",
        "@typescript-eslint/interface-name-prefix": "off",
        "@typescript-eslint/ban-ts-ignore": "off",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false,
            "classes": false
          }
        ],
        "@typescript-eslint/ban-types": "off",
        "@typescript-eslint/ban-ts-comment": "off"
      }
    },
    {
      "files": ["*.test.js", "*.test.ts"],
      "env": {
        "mocha": true
      },
      "globals": {
        "expect": "readonly"
      },
      "rules": {
        "no-unused-expressions": "off"
      }
    }
  ]
}
