// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`groupAssertionInnerSteps remove grouped: false 1`] = `
Array [
  Object {
    "consoleEntries": Array [],
    "endTimestamp": 1601853852717,
    "fnName": "goto",
    "index": 1,
    "name": "goto \\"http://jsbin.testim.io/tog\\"",
    "screenshot": "1.page-goto.jpg",
    "startTimestamp": 1601853850774,
    "stepCodeLocation": Object {
      "callstack": Array [
        Object {
          "column": 18,
          "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
          "function": "Proxy.rootCauseWrappedFunction_Page_goto",
          "line": 156,
        },
        Object {
          "column": 5,
          "file": "for-integration-test/example1.test.ts",
          "function": "Object.<anonymous>",
          "line": 4,
        },
      ],
      "codeLines": Array [
        "/* eslint-disable no-useless-catch */",
        "describe('Some test', () => {",
        "  it('First Test pass', async () => {",
        "    await page.goto('http://jsbin.testim.io/tog');",
        "    await new Promise((res) => {",
        "      setTimeout(res, 1000);",
        "    });",
      ],
      "column": 5,
      "fromRowNumber": 1,
      "row": 4,
      "sourceFileRelativePath": "for-integration-test/example1.test.ts",
      "toRowNumber": 7,
    },
    "text": "http://jsbin.testim.io/tog",
    "unhandledExceptions": Array [],
  },
  Object {
    "consoleEntries": Array [
      Object {
        "args": Array [
          "\\"Some warning here\\"",
        ],
        "column": 10,
        "level": "warning",
        "line": 31,
        "text": "Some warning here",
        "timestamp": 1601853854027,
        "url": "http://jsbin.testim.io/tog",
      },
    ],
    "endTimestamp": 1601853854030,
    "fnName": "click",
    "index": 2,
    "name": "click \\"#forwarning\\"",
    "rect": Object {
      "bottom": 29,
      "devicePixelRatio": 1,
      "height": 21,
      "left": 93.921875,
      "right": 195.375,
      "screenHeight": 720,
      "screenWidth": 1280,
      "top": 8,
      "width": 101.453125,
      "x": 93.921875,
      "y": 8,
    },
    "screenshot": "2.page-click.jpg",
    "selector": "#forwarning",
    "startTimestamp": 1601853853724,
    "stepCodeLocation": Object {
      "callstack": Array [
        Object {
          "column": 18,
          "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
          "function": "Proxy.rootCauseWrappedFunction_Page_click",
          "line": 156,
        },
        Object {
          "column": 5,
          "file": "for-integration-test/example1.test.ts",
          "function": "Object.<anonymous>",
          "line": 8,
        },
      ],
      "codeLines": Array [
        "    await new Promise((res) => {",
        "      setTimeout(res, 1000);",
        "    });",
        "    await page.click('#forwarning');",
        "    // expect-puppeteer",
        "    // await expect(page).toMatchElement('#forlog', { text: 'Make log' });",
        "    // expect-playwright",
      ],
      "column": 5,
      "fromRowNumber": 5,
      "row": 8,
      "sourceFileRelativePath": "for-integration-test/example1.test.ts",
      "toRowNumber": 11,
    },
    "unhandledExceptions": Array [],
  },
  Object {
    "consoleEntries": Array [],
    "endTimestamp": 1601853854263,
    "fnName": "waitForSelector",
    "index": 3,
    "name": "waitForSelector \\"#forlog\\"",
    "rect": Object {
      "bottom": 29,
      "devicePixelRatio": 1,
      "height": 21,
      "left": 199.375,
      "right": 269.46875,
      "screenHeight": 720,
      "screenWidth": 1280,
      "top": 8,
      "width": 70.09375,
      "x": 199.375,
      "y": 8,
    },
    "screenshot": "3.page-waitForSelector.jpg",
    "selector": "#forlog",
    "startTimestamp": 1601853854033,
    "stepCodeLocation": Object {
      "callstack": Array [
        Object {
          "column": 30,
          "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
          "function": "Proxy.returningElementHandlesViaPromiseWrappedFunction_Page_waitForSelector",
          "line": 122,
        },
        Object {
          "column": 13,
          "file": "../../node_modules/expect-playwright/lib/matchers/utils.js",
          "function": "Object.exports.getElementText",
          "line": 46,
        },
        Object {
          "column": 60,
          "file": "../../node_modules/expect-playwright/lib/matchers/toHaveText/index.js",
          "function": "Object.toHaveText",
          "line": 6,
        },
        Object {
          "column": 5,
          "file": "for-integration-test/example1.test.ts",
          "function": "Object.<anonymous>",
          "line": 13,
        },
      ],
      "codeLines": Array [
        "    // await expect(page).toMatchElement('#forlog', { text: 'Make log' });",
        "    // expect-playwright",
        "    // @ts-ignore",
        "    await expect(page).toHaveText('#forlog', 'Make log');",
        "",
        "    // @ts-ignore",
        "    await expect(page).toHaveText('#forlog', 'cat log :P');",
      ],
      "column": 5,
      "fromRowNumber": 10,
      "row": 13,
      "sourceFileRelativePath": "for-integration-test/example1.test.ts",
      "toRowNumber": 16,
    },
    "unhandledExceptions": Array [],
  },
  Object {
    "consoleEntries": Array [],
    "endTimestamp": 1601853854482,
    "fnName": "$",
    "index": 4,
    "name": "$ \\"#forlog\\"",
    "rect": Object {
      "bottom": 29,
      "devicePixelRatio": 1,
      "height": 21,
      "left": 199.375,
      "right": 269.46875,
      "screenHeight": 720,
      "screenWidth": 1280,
      "top": 8,
      "width": 70.09375,
      "x": 199.375,
      "y": 8,
    },
    "screenshot": "4.page-$.jpg",
    "selector": "#forlog",
    "startTimestamp": 1601853854265,
    "stepCodeLocation": Object {
      "callstack": Array [
        Object {
          "column": 30,
          "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
          "function": "Proxy.returningElementHandlesViaPromiseWrappedFunction_Page_$",
          "line": 122,
        },
        Object {
          "column": 28,
          "file": "../../node_modules/expect-playwright/lib/matchers/utils.js",
          "function": "Object.exports.getElementText",
          "line": 52,
        },
        Object {
          "column": 60,
          "file": "../../node_modules/expect-playwright/lib/matchers/toHaveText/index.js",
          "function": "Object.toHaveText",
          "line": 6,
        },
        Object {
          "column": 5,
          "file": "for-integration-test/example1.test.ts",
          "function": "Object.<anonymous>",
          "line": 13,
        },
      ],
      "codeLines": Array [
        "    // await expect(page).toMatchElement('#forlog', { text: 'Make log' });",
        "    // expect-playwright",
        "    // @ts-ignore",
        "    await expect(page).toHaveText('#forlog', 'Make log');",
        "",
        "    // @ts-ignore",
        "    await expect(page).toHaveText('#forlog', 'cat log :P');",
      ],
      "column": 5,
      "fromRowNumber": 10,
      "row": 13,
      "sourceFileRelativePath": "for-integration-test/example1.test.ts",
      "toRowNumber": 16,
    },
    "unhandledExceptions": Array [],
  },
  Object {
    "consoleEntries": Array [],
    "endTimestamp": 1601853854696,
    "fnName": "evaluate",
    "index": 5,
    "name": "evaluate \\"#forlog\\"",
    "rect": Object {
      "bottom": 29,
      "devicePixelRatio": 1,
      "height": 21,
      "left": 199.375,
      "right": 269.46875,
      "screenHeight": 720,
      "screenWidth": 1280,
      "top": 8,
      "width": 70.09375,
      "x": 199.375,
      "y": 8,
    },
    "screenshot": "5.elementhandle-evaluate.jpg",
    "selector": "#forlog",
    "startTimestamp": 1601853854483,
    "stepCodeLocation": Object {
      "callstack": Array [
        Object {
          "column": 18,
          "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
          "function": "Proxy.rootCauseWrappedFunction_ElementHandle_evaluate",
          "line": 156,
        },
        Object {
          "column": 35,
          "file": "../../node_modules/expect-playwright/lib/matchers/toHaveText/index.js",
          "function": "Object.toHaveText",
          "line": 8,
        },
        Object {
          "column": 5,
          "file": "for-integration-test/example1.test.ts",
          "function": "Object.<anonymous>",
          "line": 13,
        },
      ],
      "codeLines": Array [
        "    // await expect(page).toMatchElement('#forlog', { text: 'Make log' });",
        "    // expect-playwright",
        "    // @ts-ignore",
        "    await expect(page).toHaveText('#forlog', 'Make log');",
        "",
        "    // @ts-ignore",
        "    await expect(page).toHaveText('#forlog', 'cat log :P');",
      ],
      "column": 5,
      "fromRowNumber": 10,
      "row": 13,
      "sourceFileRelativePath": "for-integration-test/example1.test.ts",
      "toRowNumber": 16,
    },
    "unhandledExceptions": Array [],
  },
  Object {
    "fnName": "assertion",
    "index": 6,
    "name": "expect(instanceof(Page)).toHaveText(#forlog,Make log)",
    "rect": Object {
      "bottom": 29,
      "devicePixelRatio": 1,
      "height": 21,
      "left": 199.375,
      "right": 269.46875,
      "screenHeight": 720,
      "screenWidth": 1280,
      "top": 8,
      "width": 70.09375,
      "x": 199.375,
      "y": 8,
    },
    "screenshot": "5.elementhandle-evaluate.jpg",
    "startTimestamp": 1601853854701,
    "stepCodeLocation": Object {
      "callstack": Array [
        Object {
          "column": 25,
          "file": "../root-cause-jest/lib/helpers.ts",
          "function": "Object.async",
          "line": 213,
        },
        Object {
          "column": 37,
          "file": "../root-cause-jest/lib/hookExpect.ts",
          "function": "returnValue.then.matcherEndHandler.async.success",
          "line": 117,
        },
        Object {
          "column": 5,
          "file": "for-integration-test/example1.test.ts",
          "function": "Object.<anonymous>",
          "line": 13,
        },
      ],
      "codeLines": Array [
        "    // await expect(page).toMatchElement('#forlog', { text: 'Make log' });",
        "    // expect-playwright",
        "    // @ts-ignore",
        "    await expect(page).toHaveText('#forlog', 'Make log');",
        "",
        "    // @ts-ignore",
        "    await expect(page).toHaveText('#forlog', 'cat log :P');",
      ],
      "column": 5,
      "fromRowNumber": 10,
      "row": 13,
      "sourceFileRelativePath": "for-integration-test/example1.test.ts",
      "toRowNumber": 16,
    },
  },
  Object {
    "consoleEntries": Array [],
    "endTimestamp": 1601853854926,
    "fnName": "waitForSelector",
    "index": 7,
    "name": "waitForSelector \\"#forlog\\"",
    "rect": Object {
      "bottom": 29,
      "devicePixelRatio": 1,
      "height": 21,
      "left": 199.375,
      "right": 269.46875,
      "screenHeight": 720,
      "screenWidth": 1280,
      "top": 8,
      "width": 70.09375,
      "x": 199.375,
      "y": 8,
    },
    "screenshot": "7.page-waitForSelector.jpg",
    "selector": "#forlog",
    "startTimestamp": 1601853854701,
    "stepCodeLocation": Object {
      "callstack": Array [
        Object {
          "column": 30,
          "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
          "function": "Proxy.returningElementHandlesViaPromiseWrappedFunction_Page_waitForSelector",
          "line": 122,
        },
        Object {
          "column": 13,
          "file": "../../node_modules/expect-playwright/lib/matchers/utils.js",
          "function": "Object.exports.getElementText",
          "line": 46,
        },
        Object {
          "column": 60,
          "file": "../../node_modules/expect-playwright/lib/matchers/toHaveText/index.js",
          "function": "Object.toHaveText",
          "line": 6,
        },
        Object {
          "column": 5,
          "file": "for-integration-test/example1.test.ts",
          "function": "Object.<anonymous>",
          "line": 16,
        },
      ],
      "codeLines": Array [
        "    await expect(page).toHaveText('#forlog', 'Make log');",
        "",
        "    // @ts-ignore",
        "    await expect(page).toHaveText('#forlog', 'cat log :P');",
        "",
        "    await page.click('#forlog');",
        "  }, 5_000);",
      ],
      "column": 5,
      "fromRowNumber": 13,
      "row": 16,
      "sourceFileRelativePath": "for-integration-test/example1.test.ts",
      "toRowNumber": 19,
    },
    "unhandledExceptions": Array [],
  },
  Object {
    "consoleEntries": Array [],
    "endTimestamp": 1601853855153,
    "fnName": "$",
    "index": 8,
    "name": "$ \\"#forlog\\"",
    "rect": Object {
      "bottom": 29,
      "devicePixelRatio": 1,
      "height": 21,
      "left": 199.375,
      "right": 269.46875,
      "screenHeight": 720,
      "screenWidth": 1280,
      "top": 8,
      "width": 70.09375,
      "x": 199.375,
      "y": 8,
    },
    "screenshot": "8.page-$.jpg",
    "selector": "#forlog",
    "startTimestamp": 1601853854928,
    "stepCodeLocation": Object {
      "callstack": Array [
        Object {
          "column": 30,
          "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
          "function": "Proxy.returningElementHandlesViaPromiseWrappedFunction_Page_$",
          "line": 122,
        },
        Object {
          "column": 28,
          "file": "../../node_modules/expect-playwright/lib/matchers/utils.js",
          "function": "Object.exports.getElementText",
          "line": 52,
        },
        Object {
          "column": 60,
          "file": "../../node_modules/expect-playwright/lib/matchers/toHaveText/index.js",
          "function": "Object.toHaveText",
          "line": 6,
        },
        Object {
          "column": 5,
          "file": "for-integration-test/example1.test.ts",
          "function": "Object.<anonymous>",
          "line": 16,
        },
      ],
      "codeLines": Array [
        "    await expect(page).toHaveText('#forlog', 'Make log');",
        "",
        "    // @ts-ignore",
        "    await expect(page).toHaveText('#forlog', 'cat log :P');",
        "",
        "    await page.click('#forlog');",
        "  }, 5_000);",
      ],
      "column": 5,
      "fromRowNumber": 13,
      "row": 16,
      "sourceFileRelativePath": "for-integration-test/example1.test.ts",
      "toRowNumber": 19,
    },
    "unhandledExceptions": Array [],
  },
  Object {
    "consoleEntries": Array [],
    "endTimestamp": 1601853855380,
    "fnName": "evaluate",
    "index": 9,
    "name": "evaluate \\"#forlog\\"",
    "rect": Object {
      "bottom": 29,
      "devicePixelRatio": 1,
      "height": 21,
      "left": 199.375,
      "right": 269.46875,
      "screenHeight": 720,
      "screenWidth": 1280,
      "top": 8,
      "width": 70.09375,
      "x": 199.375,
      "y": 8,
    },
    "screenshot": "9.elementhandle-evaluate.jpg",
    "selector": "#forlog",
    "startTimestamp": 1601853855154,
    "stepCodeLocation": Object {
      "callstack": Array [
        Object {
          "column": 18,
          "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
          "function": "Proxy.rootCauseWrappedFunction_ElementHandle_evaluate",
          "line": 156,
        },
        Object {
          "column": 35,
          "file": "../../node_modules/expect-playwright/lib/matchers/toHaveText/index.js",
          "function": "Object.toHaveText",
          "line": 8,
        },
        Object {
          "column": 5,
          "file": "for-integration-test/example1.test.ts",
          "function": "Object.<anonymous>",
          "line": 16,
        },
      ],
      "codeLines": Array [
        "    await expect(page).toHaveText('#forlog', 'Make log');",
        "",
        "    // @ts-ignore",
        "    await expect(page).toHaveText('#forlog', 'cat log :P');",
        "",
        "    await page.click('#forlog');",
        "  }, 5_000);",
      ],
      "column": 5,
      "fromRowNumber": 13,
      "row": 16,
      "sourceFileRelativePath": "for-integration-test/example1.test.ts",
      "toRowNumber": 19,
    },
    "unhandledExceptions": Array [],
  },
  Object {
    "fnName": "assertion",
    "index": 10,
    "name": "expect(instanceof(Page)).toHaveText(#forlog,cat log :P)",
    "rect": Object {
      "bottom": 29,
      "devicePixelRatio": 1,
      "height": 21,
      "left": 199.375,
      "right": 269.46875,
      "screenHeight": 720,
      "screenWidth": 1280,
      "top": 8,
      "width": 70.09375,
      "x": 199.375,
      "y": 8,
    },
    "screenshot": "9.elementhandle-evaluate.jpg",
    "startTimestamp": 1601853855382,
    "stepCodeLocation": Object {
      "callstack": Array [
        Object {
          "column": 25,
          "file": "../root-cause-jest/lib/helpers.ts",
          "function": "Object.async",
          "line": 226,
        },
        Object {
          "column": 37,
          "file": "../root-cause-jest/lib/hookExpect.ts",
          "line": 121,
        },
        Object {
          "column": 5,
          "file": "for-integration-test/example1.test.ts",
          "function": "Object.<anonymous>",
          "line": 16,
        },
      ],
      "codeLines": Array [
        "    await expect(page).toHaveText('#forlog', 'Make log');",
        "",
        "    // @ts-ignore",
        "    await expect(page).toHaveText('#forlog', 'cat log :P');",
        "",
        "    await page.click('#forlog');",
        "  }, 5_000);",
      ],
      "column": 5,
      "fromRowNumber": 13,
      "row": 16,
      "sourceFileRelativePath": "for-integration-test/example1.test.ts",
      "toRowNumber": 19,
    },
    "stepError": Object {
      "message": "'cat log :P' is not included in 'Make log' of '#forlog'.",
      "name": "Error",
      "stack": "Error: 'cat log :P' is not included in 'Make log' of '#forlog'.
    at Proxy.wrappedFunction_root_toHaveText (/Users/bnaya/dev/clients/testim.io/dev-first/root-cause/packages/root-cause-jest/lib/hookExpect.ts:107:29)
    at Object.<anonymous> (/Users/bnaya/dev/clients/testim.io/dev-first/root-cause/packages/jest-tester-and-example/for-integration-test/example1.test.ts:16:24)",
    },
  },
]
`;

exports[`groupAssertionInnerSteps remove grouped: true 1`] = `
Array [
  Object {
    "consoleEntries": Array [],
    "endTimestamp": 1601853852717,
    "fnName": "goto",
    "index": 1,
    "name": "goto \\"http://jsbin.testim.io/tog\\"",
    "screenshot": "1.page-goto.jpg",
    "startTimestamp": 1601853850774,
    "stepCodeLocation": Object {
      "callstack": Array [
        Object {
          "column": 18,
          "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
          "function": "Proxy.rootCauseWrappedFunction_Page_goto",
          "line": 156,
        },
        Object {
          "column": 5,
          "file": "for-integration-test/example1.test.ts",
          "function": "Object.<anonymous>",
          "line": 4,
        },
      ],
      "codeLines": Array [
        "/* eslint-disable no-useless-catch */",
        "describe('Some test', () => {",
        "  it('First Test pass', async () => {",
        "    await page.goto('http://jsbin.testim.io/tog');",
        "    await new Promise((res) => {",
        "      setTimeout(res, 1000);",
        "    });",
      ],
      "column": 5,
      "fromRowNumber": 1,
      "row": 4,
      "sourceFileRelativePath": "for-integration-test/example1.test.ts",
      "toRowNumber": 7,
    },
    "text": "http://jsbin.testim.io/tog",
    "unhandledExceptions": Array [],
  },
  Object {
    "consoleEntries": Array [
      Object {
        "args": Array [
          "\\"Some warning here\\"",
        ],
        "column": 10,
        "level": "warning",
        "line": 31,
        "text": "Some warning here",
        "timestamp": 1601853854027,
        "url": "http://jsbin.testim.io/tog",
      },
    ],
    "endTimestamp": 1601853854030,
    "fnName": "click",
    "index": 2,
    "name": "click \\"#forwarning\\"",
    "rect": Object {
      "bottom": 29,
      "devicePixelRatio": 1,
      "height": 21,
      "left": 93.921875,
      "right": 195.375,
      "screenHeight": 720,
      "screenWidth": 1280,
      "top": 8,
      "width": 101.453125,
      "x": 93.921875,
      "y": 8,
    },
    "screenshot": "2.page-click.jpg",
    "selector": "#forwarning",
    "startTimestamp": 1601853853724,
    "stepCodeLocation": Object {
      "callstack": Array [
        Object {
          "column": 18,
          "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
          "function": "Proxy.rootCauseWrappedFunction_Page_click",
          "line": 156,
        },
        Object {
          "column": 5,
          "file": "for-integration-test/example1.test.ts",
          "function": "Object.<anonymous>",
          "line": 8,
        },
      ],
      "codeLines": Array [
        "    await new Promise((res) => {",
        "      setTimeout(res, 1000);",
        "    });",
        "    await page.click('#forwarning');",
        "    // expect-puppeteer",
        "    // await expect(page).toMatchElement('#forlog', { text: 'Make log' });",
        "    // expect-playwright",
      ],
      "column": 5,
      "fromRowNumber": 5,
      "row": 8,
      "sourceFileRelativePath": "for-integration-test/example1.test.ts",
      "toRowNumber": 11,
    },
    "unhandledExceptions": Array [],
  },
  Object {
    "fnName": "assertion",
    "index": 6,
    "name": "expect(instanceof(Page)).toHaveText(#forlog,Make log)",
    "rect": Object {
      "bottom": 29,
      "devicePixelRatio": 1,
      "height": 21,
      "left": 199.375,
      "right": 269.46875,
      "screenHeight": 720,
      "screenWidth": 1280,
      "top": 8,
      "width": 70.09375,
      "x": 199.375,
      "y": 8,
    },
    "screenshot": "5.elementhandle-evaluate.jpg",
    "startTimestamp": 1601853854701,
    "stepCodeLocation": Object {
      "callstack": Array [
        Object {
          "column": 25,
          "file": "../root-cause-jest/lib/helpers.ts",
          "function": "Object.async",
          "line": 213,
        },
        Object {
          "column": 37,
          "file": "../root-cause-jest/lib/hookExpect.ts",
          "function": "returnValue.then.matcherEndHandler.async.success",
          "line": 117,
        },
        Object {
          "column": 5,
          "file": "for-integration-test/example1.test.ts",
          "function": "Object.<anonymous>",
          "line": 13,
        },
      ],
      "codeLines": Array [
        "    // await expect(page).toMatchElement('#forlog', { text: 'Make log' });",
        "    // expect-playwright",
        "    // @ts-ignore",
        "    await expect(page).toHaveText('#forlog', 'Make log');",
        "",
        "    // @ts-ignore",
        "    await expect(page).toHaveText('#forlog', 'cat log :P');",
      ],
      "column": 5,
      "fromRowNumber": 10,
      "row": 13,
      "sourceFileRelativePath": "for-integration-test/example1.test.ts",
      "toRowNumber": 16,
    },
  },
  Object {
    "fnName": "assertion",
    "index": 10,
    "name": "expect(instanceof(Page)).toHaveText(#forlog,cat log :P)",
    "rect": Object {
      "bottom": 29,
      "devicePixelRatio": 1,
      "height": 21,
      "left": 199.375,
      "right": 269.46875,
      "screenHeight": 720,
      "screenWidth": 1280,
      "top": 8,
      "width": 70.09375,
      "x": 199.375,
      "y": 8,
    },
    "screenshot": "9.elementhandle-evaluate.jpg",
    "startTimestamp": 1601853855382,
    "stepCodeLocation": Object {
      "callstack": Array [
        Object {
          "column": 25,
          "file": "../root-cause-jest/lib/helpers.ts",
          "function": "Object.async",
          "line": 226,
        },
        Object {
          "column": 37,
          "file": "../root-cause-jest/lib/hookExpect.ts",
          "line": 121,
        },
        Object {
          "column": 5,
          "file": "for-integration-test/example1.test.ts",
          "function": "Object.<anonymous>",
          "line": 16,
        },
      ],
      "codeLines": Array [
        "    await expect(page).toHaveText('#forlog', 'Make log');",
        "",
        "    // @ts-ignore",
        "    await expect(page).toHaveText('#forlog', 'cat log :P');",
        "",
        "    await page.click('#forlog');",
        "  }, 5_000);",
      ],
      "column": 5,
      "fromRowNumber": 13,
      "row": 16,
      "sourceFileRelativePath": "for-integration-test/example1.test.ts",
      "toRowNumber": 19,
    },
    "stepError": Object {
      "message": "'cat log :P' is not included in 'Make log' of '#forlog'.",
      "name": "Error",
      "stack": "Error: 'cat log :P' is not included in 'Make log' of '#forlog'.
    at Proxy.wrappedFunction_root_toHaveText (/Users/bnaya/dev/clients/testim.io/dev-first/root-cause/packages/root-cause-jest/lib/hookExpect.ts:107:29)
    at Object.<anonymous> (/Users/bnaya/dev/clients/testim.io/dev-first/root-cause/packages/jest-tester-and-example/for-integration-test/example1.test.ts:16:24)",
    },
  },
]
`;
