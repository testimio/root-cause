// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`integration multi page test integration multi page test 1`] = `
Object {
  "metadata": Object {
    "branchInfo": "noise_removed:branchInfo",
    "endedTimestamp": 11,
    "fileName": "noise_removed/packages/root-cause-core/lib/integration-multi-page.test.ts",
    "hasNetworkLogs": true,
    "systemInfo": Object {
      "automationFramework": "puppeteer",
      "browser": "chromium",
      "browserPlatform": "noise_removed:browserPlatform",
      "browserVersion": "HeadlessChrome/86.0.4240.0",
      "modelName": "noise_removed:modelName",
      "modelVersion": "noise_removed:modelVersion",
      "pageViewport": Object {
        "height": 600,
        "width": 800,
      },
      "userAgent": "noise_removed:userAgent",
    },
    "testEndStatus": Object {
      "codeLocationDetails": Object {
        "callstack": Array [
          Object {
            "column": 29,
            "file": "lib/assortedHooks.ts",
            "function": "testEndHook",
            "line": 116,
          },
          Object {
            "column": 15,
            "file": "lib/PuppeteerPageHooker.ts",
            "function": "PuppeteerPageHooker.end",
            "line": 229,
          },
          Object {
            "column": 5,
            "file": "lib/attach.ts",
            "function": "endTest",
            "line": 115,
          },
          Object {
            "column": 5,
            "file": "lib/integration-multi-page.test.ts",
            "function": "Object.<anonymous>",
            "line": 97,
          },
        ],
        "codeLines": Array [
          "    await newPageOpenedViaLink.click('body');",
          "    await playedPage.click('body');",
          "",
          "    await endTest({",
          "      success: false,",
          "      error: { message: 'mocked error test failed' },",
          "    });",
        ],
        "column": 5,
        "fromRowNumber": 94,
        "row": 97,
        "sourceFileRelativePath": "lib/integration-multi-page.test.ts",
        "toRowNumber": 100,
      },
      "error": Object {
        "message": "mocked error test failed",
        "name": "",
        "stack": "",
      },
      "success": false,
    },
    "testFullName": "integration multi page test integration multi page test",
    "testName": "integration multi page test",
    "timestamp": 2,
  },
  "steps": Array [
    Object {
      "consoleEntries": Array [],
      "endTimestamp": 4,
      "fnName": "setContent",
      "index": 1,
      "mhtmlFile": "1.document.mhtml",
      "name": "setContent",
      "pageId": 0,
      "screenshot": "1.page-setContent.jpg",
      "startTimestamp": 3,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 18,
            "file": "lib/PuppeteerPageHooker.ts",
            "function": "Proxy.rootCauseWrappedFunction_Page_setContent",
            "line": 196,
          },
          Object {
            "column": 5,
            "file": "lib/integration-multi-page.test.ts",
            "function": "Object.<anonymous>",
            "line": 84,
          },
        ],
        "codeLines": Array [
          "      },",
          "      mockedDateConstructor",
          "    );",
          "    await playedPage.setContent(",
          "      '<h1>PAGE 1</h1><a href=\\"about:blank\\" target=\\"blank\\">CLICK HERE</a>'",
          "    );",
          "    const [newPageOpenedViaLink] = await Promise.all([",
        ],
        "column": 5,
        "fromRowNumber": 81,
        "row": 84,
        "sourceFileRelativePath": "lib/integration-multi-page.test.ts",
        "toRowNumber": 87,
      },
      "unhandledExceptions": Array [],
    },
    Object {
      "consoleEntries": Array [],
      "endTimestamp": 6,
      "fnName": "setContent",
      "index": 2,
      "mhtmlFile": "2.document.mhtml",
      "name": "setContent",
      "pageId": 1,
      "screenshot": "2.page-setContent.jpg",
      "startTimestamp": 5,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 18,
            "file": "lib/PuppeteerPageHooker.ts",
            "function": "Proxy.rootCauseWrappedFunction_Page_setContent",
            "line": 196,
          },
          Object {
            "column": 5,
            "file": "lib/integration-multi-page.test.ts",
            "function": "Object.<anonymous>",
            "line": 93,
          },
        ],
        "codeLines": Array [
          "      }),",
          "      page.click('a'),",
          "    ]);",
          "    await newPageOpenedViaLink.setContent('<h1>PAGE 2</h1>');",
          "    await newPageOpenedViaLink.click('body');",
          "    await playedPage.click('body');",
          "",
        ],
        "column": 5,
        "fromRowNumber": 90,
        "row": 93,
        "sourceFileRelativePath": "lib/integration-multi-page.test.ts",
        "toRowNumber": 96,
      },
      "unhandledExceptions": Array [],
    },
    Object {
      "consoleEntries": Array [],
      "endTimestamp": 8,
      "fnName": "click",
      "index": 3,
      "mhtmlFile": "3.document.mhtml",
      "name": "click \\"body\\"",
      "pageId": 1,
      "rect": Object {
        "bottom": "possible noise removed",
        "devicePixelRatio": "possible noise removed",
        "height": "possible noise removed",
        "left": "possible noise removed",
        "right": "possible noise removed",
        "screenHeight": "possible noise removed",
        "screenWidth": "possible noise removed",
        "top": "possible noise removed",
        "width": "possible noise removed",
        "x": "possible noise removed",
        "y": "possible noise removed",
      },
      "screenshot": "3.page-click.jpg",
      "selector": "body",
      "startTimestamp": 7,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 18,
            "file": "lib/PuppeteerPageHooker.ts",
            "function": "Proxy.rootCauseWrappedFunction_Page_click",
            "line": 196,
          },
          Object {
            "column": 5,
            "file": "lib/integration-multi-page.test.ts",
            "function": "Object.<anonymous>",
            "line": 94,
          },
        ],
        "codeLines": Array [
          "      page.click('a'),",
          "    ]);",
          "    await newPageOpenedViaLink.setContent('<h1>PAGE 2</h1>');",
          "    await newPageOpenedViaLink.click('body');",
          "    await playedPage.click('body');",
          "",
          "    await endTest({",
        ],
        "column": 5,
        "fromRowNumber": 91,
        "row": 94,
        "sourceFileRelativePath": "lib/integration-multi-page.test.ts",
        "toRowNumber": 97,
      },
      "unhandledExceptions": Array [],
    },
    Object {
      "consoleEntries": Array [],
      "endTimestamp": 10,
      "fnName": "click",
      "index": 4,
      "mhtmlFile": "4.document.mhtml",
      "name": "click \\"body\\"",
      "pageId": 0,
      "rect": Object {
        "bottom": "possible noise removed",
        "devicePixelRatio": "possible noise removed",
        "height": "possible noise removed",
        "left": "possible noise removed",
        "right": "possible noise removed",
        "screenHeight": "possible noise removed",
        "screenWidth": "possible noise removed",
        "top": "possible noise removed",
        "width": "possible noise removed",
        "x": "possible noise removed",
        "y": "possible noise removed",
      },
      "screenshot": "4.page-click.jpg",
      "selector": "body",
      "startTimestamp": 9,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 18,
            "file": "lib/PuppeteerPageHooker.ts",
            "function": "Proxy.rootCauseWrappedFunction_Page_click",
            "line": 196,
          },
          Object {
            "column": 5,
            "file": "lib/integration-multi-page.test.ts",
            "function": "Object.<anonymous>",
            "line": 95,
          },
        ],
        "codeLines": Array [
          "    ]);",
          "    await newPageOpenedViaLink.setContent('<h1>PAGE 2</h1>');",
          "    await newPageOpenedViaLink.click('body');",
          "    await playedPage.click('body');",
          "",
          "    await endTest({",
          "      success: false,",
        ],
        "column": 5,
        "fromRowNumber": 92,
        "row": 95,
        "sourceFileRelativePath": "lib/integration-multi-page.test.ts",
        "toRowNumber": 98,
      },
      "unhandledExceptions": Array [],
    },
  ],
}
`;
