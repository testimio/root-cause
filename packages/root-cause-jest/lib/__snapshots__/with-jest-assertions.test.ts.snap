// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sanity integration test with jest assertions 1`] = `
Object {
  "metadata": Object {
    "branchInfo": "noise_removed:branchInfo",
    "endedTimestamp": 28,
    "fileName": "noise_removed/packages/root-cause-jest/lib/with-jest-assertions.test.ts",
    "hasNetworkLogs": true,
    "systemInfo": Object {
      "automationFramework": "puppeteer",
      "browser": "chromium",
      "browserPlatform": "noise_removed:browserPlatform",
      "browserVersion": "HeadlessChrome/85.0.4182.0",
      "modelName": "noise_removed:modelName",
      "modelVersion": "noise_removed:modelVersion",
      "pageViewport": Object {
        "height": 600,
        "width": 800,
      },
      "userAgent": "noise_removed:userAgent",
    },
    "testEndStatus": Object {
      "codeLocationDetails": Object {
        "callstack": Array [
          Object {
            "column": 29,
            "file": "../root-cause-core/lib/assortedHooks.ts",
            "function": "testEndHook",
            "line": 122,
          },
          Object {
            "column": 15,
            "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
            "function": "PuppeteerPageHooker.end",
            "line": 188,
          },
          Object {
            "column": 5,
            "file": "../root-cause-core/lib/attach.ts",
            "function": "endTest",
            "line": 110,
          },
          Object {
            "column": 5,
            "file": "lib/with-jest-assertions.test.ts",
            "function": "Object.<anonymous>",
            "line": 117,
          },
        ],
        "codeLines": Array [
          "",
          "    expect(allButtons).toHaveLength(2);",
          "",
          "    await endTest({",
          "      success: false,",
          "      error: { message: 'mocked error test failed' },",
          "    });",
        ],
        "column": 5,
        "fromRowNumber": 114,
        "row": 117,
        "sourceFileRelativePath": "lib/with-jest-assertions.test.ts",
        "toRowNumber": 120,
      },
      "error": Object {
        "message": "mocked error test failed",
        "name": "",
        "stack": "",
      },
      "success": false,
    },
    "testFullName": "Sanity integration test with jest assertions",
    "testName": "with jest assertions",
    "timestamp": 2,
  },
  "steps": Array [
    Object {
      "consoleEntries": Array [],
      "endTimestamp": 4,
      "fnName": "goto",
      "index": 1,
      "name": "goto \\"http://jsbin.testim.io/ner/1\\"",
      "screenshot": "1.page-goto.jpg",
      "startTimestamp": 3,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 21,
            "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
            "function": "Proxy.rootCauseWrappedFunction",
            "line": 130,
          },
          Object {
            "column": 5,
            "file": "lib/with-jest-assertions.test.ts",
            "function": "Object.<anonymous>",
            "line": 84,
          },
        ],
        "codeLines": Array [
          "      startTestParams.projectRoot",
          "    );",
          "",
          "    await playedPage.goto('http://jsbin.testim.io/ner/1');",
          "    await playedPage.click('#test');",
          "",
          "    await playedPage.click('#test');",
        ],
        "column": 5,
        "fromRowNumber": 81,
        "row": 84,
        "sourceFileRelativePath": "lib/with-jest-assertions.test.ts",
        "toRowNumber": 87,
      },
      "text": "http://jsbin.testim.io/ner/1",
      "unhandledExceptions": Array [],
    },
    Object {
      "consoleEntries": Array [],
      "endTimestamp": 6,
      "fnName": "click",
      "index": 2,
      "name": "click \\"#test\\"",
      "rect": Object {
        "bottom": "possible noise removed",
        "devicePixelRatio": "possible noise removed",
        "height": "possible noise removed",
        "left": "possible noise removed",
        "right": "possible noise removed",
        "screenHeight": "possible noise removed",
        "screenWidth": "possible noise removed",
        "top": "possible noise removed",
        "width": "possible noise removed",
        "x": "possible noise removed",
        "y": "possible noise removed",
      },
      "screenshot": "2.page-click.jpg",
      "selector": "#test",
      "startTimestamp": 5,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 21,
            "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
            "function": "Proxy.rootCauseWrappedFunction",
            "line": 130,
          },
          Object {
            "column": 5,
            "file": "lib/with-jest-assertions.test.ts",
            "function": "Object.<anonymous>",
            "line": 85,
          },
        ],
        "codeLines": Array [
          "    );",
          "",
          "    await playedPage.goto('http://jsbin.testim.io/ner/1');",
          "    await playedPage.click('#test');",
          "",
          "    await playedPage.click('#test');",
          "    await playedPage.click('#test');",
        ],
        "column": 5,
        "fromRowNumber": 82,
        "row": 85,
        "sourceFileRelativePath": "lib/with-jest-assertions.test.ts",
        "toRowNumber": 88,
      },
      "unhandledExceptions": Array [],
    },
    Object {
      "consoleEntries": Array [],
      "endTimestamp": 8,
      "fnName": "click",
      "index": 3,
      "name": "click \\"#test\\"",
      "rect": Object {
        "bottom": "possible noise removed",
        "devicePixelRatio": "possible noise removed",
        "height": "possible noise removed",
        "left": "possible noise removed",
        "right": "possible noise removed",
        "screenHeight": "possible noise removed",
        "screenWidth": "possible noise removed",
        "top": "possible noise removed",
        "width": "possible noise removed",
        "x": "possible noise removed",
        "y": "possible noise removed",
      },
      "screenshot": "3.page-click.jpg",
      "selector": "#test",
      "startTimestamp": 7,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 21,
            "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
            "function": "Proxy.rootCauseWrappedFunction",
            "line": 130,
          },
          Object {
            "column": 5,
            "file": "lib/with-jest-assertions.test.ts",
            "function": "Object.<anonymous>",
            "line": 87,
          },
        ],
        "codeLines": Array [
          "    await playedPage.goto('http://jsbin.testim.io/ner/1');",
          "    await playedPage.click('#test');",
          "",
          "    await playedPage.click('#test');",
          "    await playedPage.click('#test');",
          "",
          "    await playedPage.click('#test');",
        ],
        "column": 5,
        "fromRowNumber": 84,
        "row": 87,
        "sourceFileRelativePath": "lib/with-jest-assertions.test.ts",
        "toRowNumber": 90,
      },
      "unhandledExceptions": Array [],
    },
    Object {
      "consoleEntries": Array [],
      "endTimestamp": 10,
      "fnName": "click",
      "index": 4,
      "name": "click \\"#test\\"",
      "rect": Object {
        "bottom": "possible noise removed",
        "devicePixelRatio": "possible noise removed",
        "height": "possible noise removed",
        "left": "possible noise removed",
        "right": "possible noise removed",
        "screenHeight": "possible noise removed",
        "screenWidth": "possible noise removed",
        "top": "possible noise removed",
        "width": "possible noise removed",
        "x": "possible noise removed",
        "y": "possible noise removed",
      },
      "screenshot": "4.page-click.jpg",
      "selector": "#test",
      "startTimestamp": 9,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 21,
            "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
            "function": "Proxy.rootCauseWrappedFunction",
            "line": 130,
          },
          Object {
            "column": 5,
            "file": "lib/with-jest-assertions.test.ts",
            "function": "Object.<anonymous>",
            "line": 88,
          },
        ],
        "codeLines": Array [
          "    await playedPage.click('#test');",
          "",
          "    await playedPage.click('#test');",
          "    await playedPage.click('#test');",
          "",
          "    await playedPage.click('#test');",
          "    const counterEl = await playedPage.$('#counter');",
        ],
        "column": 5,
        "fromRowNumber": 85,
        "row": 88,
        "sourceFileRelativePath": "lib/with-jest-assertions.test.ts",
        "toRowNumber": 91,
      },
      "unhandledExceptions": Array [],
    },
    Object {
      "consoleEntries": Array [],
      "endTimestamp": 12,
      "fnName": "click",
      "index": 5,
      "name": "click \\"#test\\"",
      "rect": Object {
        "bottom": "possible noise removed",
        "devicePixelRatio": "possible noise removed",
        "height": "possible noise removed",
        "left": "possible noise removed",
        "right": "possible noise removed",
        "screenHeight": "possible noise removed",
        "screenWidth": "possible noise removed",
        "top": "possible noise removed",
        "width": "possible noise removed",
        "x": "possible noise removed",
        "y": "possible noise removed",
      },
      "screenshot": "5.page-click.jpg",
      "selector": "#test",
      "startTimestamp": 11,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 21,
            "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
            "function": "Proxy.rootCauseWrappedFunction",
            "line": 130,
          },
          Object {
            "column": 5,
            "file": "lib/with-jest-assertions.test.ts",
            "function": "Object.<anonymous>",
            "line": 90,
          },
        ],
        "codeLines": Array [
          "    await playedPage.click('#test');",
          "    await playedPage.click('#test');",
          "",
          "    await playedPage.click('#test');",
          "    const counterEl = await playedPage.$('#counter');",
          "",
          "    expect(counterEl).not.toBe(null);",
        ],
        "column": 5,
        "fromRowNumber": 87,
        "row": 90,
        "sourceFileRelativePath": "lib/with-jest-assertions.test.ts",
        "toRowNumber": 93,
      },
      "unhandledExceptions": Array [],
    },
    Object {
      "fnName": "assertion",
      "index": 6,
      "name": "expect(instanceof(ElementHandle)).not.toBe(null)",
      "startTimestamp": 13,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 25,
            "file": "lib/helpers.ts",
            "function": "Object.sync",
            "line": 181,
          },
          Object {
            "column": 29,
            "file": "lib/hookExpect.ts",
            "function": "Proxy.wrappedFunction",
            "line": 109,
          },
          Object {
            "column": 27,
            "file": "lib/with-jest-assertions.test.ts",
            "function": "Object.<anonymous>",
            "line": 93,
          },
        ],
        "codeLines": Array [
          "    await playedPage.click('#test');",
          "    const counterEl = await playedPage.$('#counter');",
          "",
          "    expect(counterEl).not.toBe(null);",
          "",
          "    utils.assertNotNullOrUndefined(counterEl);",
          "",
        ],
        "column": 27,
        "fromRowNumber": 90,
        "row": 93,
        "sourceFileRelativePath": "lib/with-jest-assertions.test.ts",
        "toRowNumber": 96,
      },
    },
    Object {
      "consoleEntries": Array [],
      "endTimestamp": 15,
      "fnName": "getProperty",
      "index": 7,
      "name": "getProperty",
      "screenshot": "7.elementhandle-getProperty.jpg",
      "startTimestamp": 14,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 21,
            "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
            "function": "Proxy.rootCauseWrappedFunction",
            "line": 130,
          },
          Object {
            "column": 25,
            "file": "lib/with-jest-assertions.test.ts",
            "function": "Object.<anonymous>",
            "line": 97,
          },
        ],
        "codeLines": Array [
          "",
          "    utils.assertNotNullOrUndefined(counterEl);",
          "",
          "    const text = await (await counterEl.getProperty('innerText')).jsonValue();",
          "",
          "    expect(text).toBe('4');",
          "",
        ],
        "column": 25,
        "fromRowNumber": 94,
        "row": 97,
        "sourceFileRelativePath": "lib/with-jest-assertions.test.ts",
        "toRowNumber": 100,
      },
      "unhandledExceptions": Array [],
    },
    Object {
      "fnName": "assertion",
      "index": 8,
      "name": "expect(4).toBe(4)",
      "startTimestamp": 16,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 25,
            "file": "lib/helpers.ts",
            "function": "Object.sync",
            "line": 181,
          },
          Object {
            "column": 29,
            "file": "lib/hookExpect.ts",
            "function": "Proxy.wrappedFunction",
            "line": 109,
          },
          Object {
            "column": 18,
            "file": "lib/with-jest-assertions.test.ts",
            "function": "Object.<anonymous>",
            "line": 99,
          },
        ],
        "codeLines": Array [
          "",
          "    const text = await (await counterEl.getProperty('innerText')).jsonValue();",
          "",
          "    expect(text).toBe('4');",
          "",
          "    await playedPage.click('#reset');",
          "",
        ],
        "column": 18,
        "fromRowNumber": 96,
        "row": 99,
        "sourceFileRelativePath": "lib/with-jest-assertions.test.ts",
        "toRowNumber": 102,
      },
    },
    Object {
      "consoleEntries": Array [],
      "endTimestamp": 18,
      "fnName": "click",
      "index": 9,
      "name": "click \\"#reset\\"",
      "rect": Object {
        "bottom": "possible noise removed",
        "devicePixelRatio": "possible noise removed",
        "height": "possible noise removed",
        "left": "possible noise removed",
        "right": "possible noise removed",
        "screenHeight": "possible noise removed",
        "screenWidth": "possible noise removed",
        "top": "possible noise removed",
        "width": "possible noise removed",
        "x": "possible noise removed",
        "y": "possible noise removed",
      },
      "screenshot": "9.page-click.jpg",
      "selector": "#reset",
      "startTimestamp": 17,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 21,
            "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
            "function": "Proxy.rootCauseWrappedFunction",
            "line": 130,
          },
          Object {
            "column": 5,
            "file": "lib/with-jest-assertions.test.ts",
            "function": "Object.<anonymous>",
            "line": 101,
          },
        ],
        "codeLines": Array [
          "",
          "    expect(text).toBe('4');",
          "",
          "    await playedPage.click('#reset');",
          "",
          "    const text2 = await (await counterEl.getProperty('innerText')).jsonValue();",
          "",
        ],
        "column": 5,
        "fromRowNumber": 98,
        "row": 101,
        "sourceFileRelativePath": "lib/with-jest-assertions.test.ts",
        "toRowNumber": 104,
      },
      "unhandledExceptions": Array [],
    },
    Object {
      "consoleEntries": Array [],
      "endTimestamp": 20,
      "fnName": "getProperty",
      "index": 10,
      "name": "getProperty",
      "screenshot": "10.elementhandle-getProperty.jpg",
      "startTimestamp": 19,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 21,
            "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
            "function": "Proxy.rootCauseWrappedFunction",
            "line": 130,
          },
          Object {
            "column": 26,
            "file": "lib/with-jest-assertions.test.ts",
            "function": "Object.<anonymous>",
            "line": 103,
          },
        ],
        "codeLines": Array [
          "",
          "    await playedPage.click('#reset');",
          "",
          "    const text2 = await (await counterEl.getProperty('innerText')).jsonValue();",
          "",
          "    expect(text2).toBe('0');",
          "",
        ],
        "column": 26,
        "fromRowNumber": 100,
        "row": 103,
        "sourceFileRelativePath": "lib/with-jest-assertions.test.ts",
        "toRowNumber": 106,
      },
      "unhandledExceptions": Array [],
    },
    Object {
      "fnName": "assertion",
      "index": 11,
      "name": "expect(0).toBe(0)",
      "startTimestamp": 21,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 25,
            "file": "lib/helpers.ts",
            "function": "Object.sync",
            "line": 181,
          },
          Object {
            "column": 29,
            "file": "lib/hookExpect.ts",
            "function": "Proxy.wrappedFunction",
            "line": 109,
          },
          Object {
            "column": 19,
            "file": "lib/with-jest-assertions.test.ts",
            "function": "Object.<anonymous>",
            "line": 105,
          },
        ],
        "codeLines": Array [
          "",
          "    const text2 = await (await counterEl.getProperty('innerText')).jsonValue();",
          "",
          "    expect(text2).toBe('0');",
          "",
          "    const allButtons = await playedPage.$$('button');",
          "",
        ],
        "column": 19,
        "fromRowNumber": 102,
        "row": 105,
        "sourceFileRelativePath": "lib/with-jest-assertions.test.ts",
        "toRowNumber": 108,
      },
    },
    Object {
      "consoleEntries": Array [],
      "endTimestamp": 23,
      "fnName": "click",
      "index": 12,
      "name": "click",
      "screenshot": "12.elementhandle-click.jpg",
      "startTimestamp": 22,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 21,
            "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
            "function": "Proxy.rootCauseWrappedFunction",
            "line": 130,
          },
          Object {
            "column": 5,
            "file": "lib/with-jest-assertions.test.ts",
            "function": "Object.<anonymous>",
            "line": 109,
          },
        ],
        "codeLines": Array [
          "",
          "    const allButtons = await playedPage.$$('button');",
          "",
          "    await allButtons[0].click();",
          "",
          "    const text3 = await (await counterEl.getProperty('innerText')).jsonValue();",
          "",
        ],
        "column": 5,
        "fromRowNumber": 106,
        "row": 109,
        "sourceFileRelativePath": "lib/with-jest-assertions.test.ts",
        "toRowNumber": 112,
      },
      "unhandledExceptions": Array [],
    },
    Object {
      "consoleEntries": Array [],
      "endTimestamp": 25,
      "fnName": "getProperty",
      "index": 13,
      "name": "getProperty",
      "screenshot": "13.elementhandle-getProperty.jpg",
      "startTimestamp": 24,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 21,
            "file": "../root-cause-core/lib/PuppeteerPageHooker.ts",
            "function": "Proxy.rootCauseWrappedFunction",
            "line": 130,
          },
          Object {
            "column": 26,
            "file": "lib/with-jest-assertions.test.ts",
            "function": "Object.<anonymous>",
            "line": 111,
          },
        ],
        "codeLines": Array [
          "",
          "    await allButtons[0].click();",
          "",
          "    const text3 = await (await counterEl.getProperty('innerText')).jsonValue();",
          "",
          "    expect(text3).toBe('1');",
          "",
        ],
        "column": 26,
        "fromRowNumber": 108,
        "row": 111,
        "sourceFileRelativePath": "lib/with-jest-assertions.test.ts",
        "toRowNumber": 114,
      },
      "unhandledExceptions": Array [],
    },
    Object {
      "fnName": "assertion",
      "index": 14,
      "name": "expect(1).toBe(1)",
      "startTimestamp": 26,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 25,
            "file": "lib/helpers.ts",
            "function": "Object.sync",
            "line": 181,
          },
          Object {
            "column": 29,
            "file": "lib/hookExpect.ts",
            "function": "Proxy.wrappedFunction",
            "line": 109,
          },
          Object {
            "column": 19,
            "file": "lib/with-jest-assertions.test.ts",
            "function": "Object.<anonymous>",
            "line": 113,
          },
        ],
        "codeLines": Array [
          "",
          "    const text3 = await (await counterEl.getProperty('innerText')).jsonValue();",
          "",
          "    expect(text3).toBe('1');",
          "",
          "    expect(allButtons).toHaveLength(2);",
          "",
        ],
        "column": 19,
        "fromRowNumber": 110,
        "row": 113,
        "sourceFileRelativePath": "lib/with-jest-assertions.test.ts",
        "toRowNumber": 116,
      },
    },
    Object {
      "fnName": "assertion",
      "index": 15,
      "name": "expect(Array(length=2)).toHaveLength(2)",
      "startTimestamp": 27,
      "stepCodeLocation": Object {
        "callstack": Array [
          Object {
            "column": 25,
            "file": "lib/helpers.ts",
            "function": "Object.sync",
            "line": 181,
          },
          Object {
            "column": 29,
            "file": "lib/hookExpect.ts",
            "function": "Proxy.wrappedFunction",
            "line": 109,
          },
          Object {
            "column": 24,
            "file": "lib/with-jest-assertions.test.ts",
            "function": "Object.<anonymous>",
            "line": 115,
          },
        ],
        "codeLines": Array [
          "",
          "    expect(text3).toBe('1');",
          "",
          "    expect(allButtons).toHaveLength(2);",
          "",
          "    await endTest({",
          "      success: false,",
        ],
        "column": 24,
        "fromRowNumber": 112,
        "row": 115,
        "sourceFileRelativePath": "lib/with-jest-assertions.test.ts",
        "toRowNumber": 118,
      },
    },
  ],
}
`;
